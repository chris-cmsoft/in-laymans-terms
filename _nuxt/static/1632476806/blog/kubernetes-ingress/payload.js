__NUXT_JSONP__("/blog/kubernetes-ingress", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,al,am,an,ao,ap,aq,ar,as,at,au){return {data:[{article:{slug:"kubernetes-ingress",description:U,title:U,categories:["api","web"],author:{slug:V},toc:[{id:W,depth:y,text:X},{id:Y,depth:y,text:Z},{id:_,depth:y,text:$},{id:aa,depth:y,text:ab},{id:ac,depth:y,text:ad},{id:ae,depth:af,text:ag},{id:ah,depth:af,text:ai}],body:{type:"root",children:[{type:b,tag:f,props:{},children:[{type:a,value:"Kubernetes Ingress often seems like magic."}]},{type:a,value:e},{type:b,tag:f,props:{},children:[{type:a,value:"Install it, configure some "},{type:b,tag:m,props:{},children:[{type:a,value:"Ingress"}]},{type:a,value:" yaml files, and you have an endpoint to your service."}]},{type:a,value:e},{type:b,tag:f,props:{},children:[{type:a,value:"But how do they ACTUALLY work ?"}]},{type:a,value:e},{type:b,tag:f,props:{},children:[{type:a,value:"In this post we'll focus on the Nginx Ingress, but most ingresses will follow a similar pattern."}]},{type:a,value:e},{type:b,tag:f,props:{},children:[{type:a,value:"We'll go through it step by step, digging into each piece a little deeper"}]},{type:a,value:e},{type:b,tag:z,props:{},children:[]},{type:a,value:e},{type:b,tag:A,props:{id:W},children:[{type:b,tag:p,props:{href:"#the-controller",ariaHidden:r,tabIndex:s},children:[{type:b,tag:c,props:{className:[t,u]},children:[]}]},{type:a,value:X}]},{type:a,value:e},{type:b,tag:f,props:{},children:[{type:a,value:"The first thing we need to know is how the Ingress Controller works. Not the paradigm, but the actual Controller."}]},{type:a,value:e},{type:b,tag:f,props:{},children:[{type:a,value:"It works using what's called a reconciliation loop."}]},{type:a,value:e},{type:b,tag:f,props:{},children:[{type:a,value:"It watches for "},{type:b,tag:m,props:{},children:[{type:a,value:"kind: Ingress"}]},{type:a,value:" objects in the Kubernetes cluster, and when one is created, updated or delete,\nit configures the Ingress Proxy (we'll cover this a bit later on) to match what is in the Ingress Object Definition."}]},{type:a,value:e},{type:b,tag:f,props:{},children:[{type:b,tag:v,props:{alt:aj,src:"\u002Fcontent\u002Fkubernetes-ingress\u002FIngressWatch.png",title:aj},children:[]}]},{type:a,value:e},{type:b,tag:f,props:{},children:[{type:a,value:"You can see this in the logs when you have installed it, and created an Ingress Object."}]},{type:a,value:e},{type:b,tag:B,props:{className:[C]},children:[{type:b,tag:D,props:{className:[E,ak]},children:[{type:b,tag:m,props:{},children:[{type:a,value:"$ kubectl logs -l app.kubernetes.io\u002Fname=ingress-nginx\n[...startup logs]\nI0916 17:37:14.528274       7 main.go:101] \"successfully validated configuration, accepting\" ingress=\"app-all\u002Fdefault\"\nI0916 17:37:14.551142       7 store.go:365] \"Found valid IngressClass\" ingress=\"default\u002Fapp-all\" ingressclass=\"nginx\"\nI0916 17:37:14.551699       7 controller.go:150] \"Configuration changes detected, backend reload required\"\nI0916 17:37:14.556446       7 event.go:282] Event(v1.ObjectReference{Kind:\"Ingress\", Namespace:\"default\", Name:\"app-all\", UID:\"73f9b804-1486-4e38-877a-edf889fcd4ea\", APIVersion:\"networking.k8s.io\u002Fv1\", ResourceVersion:\"4685563\", FieldPath:\"\"}): type: 'Normal' reason: 'Sync' Scheduled for sync\nI0916 17:37:14.694526       7 controller.go:167] \"Backend successfully reloaded\"\nI0916 17:37:14.694883       7 event.go:282] Event(v1.ObjectReference{Kind:\"Pod\", Namespace:\"default\", Name:\"ingress-nginx-controller-fd7bb8d66-xrn2n\", UID:\"e6964f08-4dc4-4345-911b-f158d06a06c7\", APIVersion:\"v1\", ResourceVersion:\"4557455\", FieldPath:\"\"}): type: 'Normal' reason: 'RELOAD' NGINX reload triggered due to a change in configuration\n"}]}]}]},{type:a,value:e},{type:b,tag:f,props:{},children:[{type:a,value:"When you update the Ingress Object and apply it, you'll see the new reload in the logs."}]},{type:a,value:e},{type:b,tag:f,props:{},children:[{type:a,value:"This is the basic workings of how the Ingress Controller works."}]},{type:a,value:e},{type:b,tag:f,props:{},children:[{type:a,value:"Now that we know how changes are realised and updated,\nlet's move onto understanding how the Ingress receives traffic."}]},{type:a,value:e},{type:b,tag:z,props:{},children:[]},{type:a,value:e},{type:b,tag:A,props:{id:Y},children:[{type:b,tag:p,props:{href:"#traffic-to-the-ingress",ariaHidden:r,tabIndex:s},children:[{type:b,tag:c,props:{className:[t,u]},children:[]}]},{type:a,value:Z}]},{type:a,value:e},{type:b,tag:f,props:{},children:[{type:a,value:"In this section we will demystify how the Ingress actually receives traffic from the internet."}]},{type:a,value:e},{type:b,tag:f,props:{},children:[{type:a,value:"There is a common misconception that the Ingress is an additional "},{type:b,tag:m,props:{},children:[{type:a,value:"kind: Service"}]},{type:a,value:" in Kubernetes."}]},{type:a,value:e},{type:b,tag:f,props:{},children:[{type:b,tag:v,props:{alt:al,src:"\u002Fcontent\u002Fkubernetes-ingress\u002FIngressServiceType.png",title:al},children:[]}]},{type:a,value:e},{type:b,tag:f,props:{},children:[{type:a,value:"The Ingress is in fact just a Deployment running in Kubernetes."}]},{type:a,value:e},{type:b,tag:f,props:{},children:[{type:a,value:"Traffic gets to it through a Service of "},{type:b,tag:m,props:{},children:[{type:a,value:M}]},{type:a,value:" or "},{type:b,tag:m,props:{},children:[{type:a,value:"type: NodePort"}]},{type:a,value:q}]},{type:a,value:e},{type:b,tag:f,props:{},children:[{type:a,value:"Both of these are very similar in that the "},{type:b,tag:m,props:{},children:[{type:a,value:M}]},{type:a,value:" also creates a NodePort, and then connects some sort of LoadLabancer to it."}]},{type:a,value:e},{type:b,tag:f,props:{},children:[{type:b,tag:v,props:{alt:am,src:"\u002Fcontent\u002Fkubernetes-ingress\u002FIngressLoadBalancer.png",title:am},children:[]}]},{type:a,value:e},{type:b,tag:f,props:{},children:[{type:a,value:"To show this you can investigate the service created by the Ingress."}]},{type:a,value:e},{type:b,tag:B,props:{className:[C]},children:[{type:b,tag:D,props:{className:[E,N]},children:[{type:b,tag:m,props:{},children:[{type:a,value:"$ kubectl get services\nNAME                                 TYPE           CLUSTER-IP       EXTERNAL-IP      PORT"},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:"("}]},{type:a,value:"S"},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:")"}]},{type:a,value:"                      AGE\ningress-nginx-controller             LoadBalancer   "},{type:b,tag:c,props:{className:[d,F]},children:[{type:a,value:"10.245"}]},{type:a,value:".192.106   "},{type:b,tag:c,props:{className:[d,F]},children:[{type:a,value:"157.245"}]},{type:a,value:".27.226   "},{type:b,tag:c,props:{className:[d,F]},children:[{type:a,value:"80"}]},{type:a,value:":32555\u002FTCP,443:32591\u002FTCP   62m\n"}]}]}]},{type:a,value:e},{type:b,tag:f,props:{},children:[{type:a,value:"On inspection, you'll see that this service points directly at the ingress controller"}]},{type:a,value:e},{type:b,tag:B,props:{className:[C]},children:[{type:b,tag:D,props:{className:[E,N]},children:[{type:b,tag:m,props:{},children:[{type:a,value:"$ kubectl get services ingress-nginx-controller -o go-template"},{type:b,tag:c,props:{className:[d,H]},children:[{type:a,value:I}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:"'{{\"selector:\\n\"}}{{range $key, $value := .spec.selector}}{{\"  \"}}{{$key}}:{{$value}}{{\"\\n\"}}{{end}}'"}]},{type:a,value:"\nselector:\n  app.kubernetes.io\u002Fcomponent:controller\n  app.kubernetes.io\u002Finstance:ingress-nginx\n  app.kubernetes.io\u002Fname:ingress-nginx\n\n$ kubectl get pods -l app.kubernetes.io\u002Fcomponent"},{type:b,tag:c,props:{className:[d,H]},children:[{type:a,value:I}]},{type:a,value:"controller,app.kubernetes.io\u002Finstance"},{type:b,tag:c,props:{className:[d,H]},children:[{type:a,value:I}]},{type:a,value:"ingress-nginx,app.kubernetes.io\u002Fname"},{type:b,tag:c,props:{className:[d,H]},children:[{type:a,value:I}]},{type:a,value:"ingress-nginx\nNAME                                       READY   STATUS    RESTARTS   AGE\ningress-nginx-controller-fd7bb8d66-xrn2n   "},{type:b,tag:c,props:{className:[d,F]},children:[{type:a,value:"1"}]},{type:a,value:"\u002F1     Running   "},{type:b,tag:c,props:{className:[d,F]},children:[{type:a,value:"0"}]},{type:a,value:"          148m\n"}]}]}]},{type:a,value:e},{type:b,tag:f,props:{},children:[{type:a,value:"So you can now see that any requests to the LoadBalancer, will end up at the Ingress Controller."}]},{type:a,value:e},{type:b,tag:f,props:{},children:[{type:a,value:"This is how traffic gets to the Ingress."}]},{type:a,value:e},{type:b,tag:f,props:{},children:[{type:a,value:"Next, we can see how the Proxy works from there."}]},{type:a,value:e},{type:b,tag:z,props:{},children:[]},{type:a,value:e},{type:b,tag:A,props:{id:_},children:[{type:b,tag:p,props:{href:"#the-proxy",ariaHidden:r,tabIndex:s},children:[{type:b,tag:c,props:{className:[t,u]},children:[]}]},{type:a,value:$}]},{type:a,value:e},{type:b,tag:f,props:{},children:[{type:a,value:"The next piece is about actually proxying traffic from the Ingress, to our application pods."}]},{type:a,value:e},{type:b,tag:f,props:{},children:[{type:a,value:"The common misconception here, is that the Ingress proxies traffic to the Service sitting in\nfront of our application pods."}]},{type:a,value:e},{type:b,tag:f,props:{},children:[{type:b,tag:v,props:{alt:an,src:"\u002Fcontent\u002Fkubernetes-ingress\u002FIngressThroughService.png",title:an},children:[]}]},{type:a,value:e},{type:b,tag:f,props:{},children:[{type:a,value:"This again, is a incorrect in the case of most ingresses."}]},{type:a,value:e},{type:b,tag:f,props:{},children:[{type:a,value:"When we create a Service Object in Kubernetes, it in turn creates an Endpoint Object,\ncontaining all of the actual IP Addresses of our running pods."}]},{type:a,value:e},{type:b,tag:f,props:{},children:[{type:a,value:"You can see this by inspecting the endpoints in your cluster"}]},{type:a,value:e},{type:b,tag:B,props:{className:[C]},children:[{type:b,tag:D,props:{className:[E,ak]},children:[{type:b,tag:m,props:{},children:[{type:a,value:"$ kubectl get endpoints\nNAME                                 ENDPOINTS                                               AGE\napp                                  10.244.2.15:5000,10.244.2.232:5000,10.244.2.95:5000     158m\ningress-nginx-controller             10.244.5.21:443,10.244.5.21:80                          169m\ningress-nginx-controller-admission   10.244.5.21:8443                                        169m\n"}]}]}]},{type:a,value:e},{type:b,tag:f,props:{},children:[{type:a,value:"The Ingress Controller uses these endpoints directly."}]},{type:a,value:e},{type:b,tag:f,props:{},children:[{type:a,value:"This means it will be very much influenced by the Service in front of our application\n(as it creates the correct endpoints for our application), but not directly use it's DNS\nto connect to our applications"}]},{type:a,value:e},{type:b,tag:f,props:{},children:[{type:b,tag:v,props:{alt:ao,src:"\u002Fcontent\u002Fkubernetes-ingress\u002FIngressActual.png",title:ao},children:[]}]},{type:a,value:e},{type:b,tag:f,props:{},children:[{type:a,value:"The reason for this becomes clear when you consider things like Sticky sessions\n(meaning a clients requests will always go to the same pod)."}]},{type:a,value:e},{type:b,tag:f,props:{},children:[{type:a,value:"If the Ingress was pointing at the Kubernetes Service,\nit could not ensure that traffic from a client, will always be sent to the same pod."}]},{type:a,value:e},{type:b,tag:f,props:{},children:[{type:a,value:"The Kubernetes Endpoints are loaded into memory for the Nginx Ingress."}]},{type:a,value:e},{type:b,tag:f,props:{},children:[{type:a,value:"This allows you for example, to create extra LUA extensions at the Nginx level,\nalthough this is very low-level."}]},{type:a,value:e},{type:b,tag:f,props:{},children:[{type:a,value:"You can inspect the actual Endpoints used by the Nginx Ingress using the "},{type:b,tag:p,props:{href:"https:\u002F\u002Fkubernetes.github.io\u002Fingress-nginx\u002Fkubectl-plugin\u002F",rel:["nofollow","noopener","noreferrer"],target:"_blank"},children:[{type:a,value:"Nginx Ingress Krew Plugin"}]}]},{type:a,value:e},{type:b,tag:B,props:{className:[C]},children:[{type:b,tag:D,props:{className:[E,N]},children:[{type:b,tag:m,props:{},children:[{type:a,value:"$ kubectl ingress-nginx backends\n"},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:ap}]},{type:a,value:aq},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:O},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:"\"name\""}]},{type:b,tag:c,props:{className:[d,i,j]},children:[{type:a,value:k}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:"\"default-app-http\""}]},{type:a,value:w},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:"\"service\""}]},{type:b,tag:c,props:{className:[d,i,j]},children:[{type:a,value:k}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:G},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:"\"metadata\""}]},{type:b,tag:c,props:{className:[d,i,j]},children:[{type:a,value:k}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:x}]},{type:a,value:q},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:o}]},{type:a,value:J},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:"\"spec\""}]},{type:b,tag:c,props:{className:[d,i,j]},children:[{type:a,value:k}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:x}]},{type:a,value:q},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:o}]},{type:a,value:J},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:"\"status\""}]},{type:b,tag:c,props:{className:[d,i,j]},children:[{type:a,value:k}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:x}]},{type:a,value:q},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:o}]},{type:a,value:O},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:o}]},{type:a,value:w},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:K}]},{type:b,tag:c,props:{className:[d,i,j]},children:[{type:a,value:k}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:"\"http\""}]},{type:a,value:w},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:"\"sslPassthrough\""}]},{type:b,tag:c,props:{className:[d,i,j]},children:[{type:a,value:k}]},{type:a,value:ar},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:"\"endpoints\""}]},{type:b,tag:c,props:{className:[d,i,j]},children:[{type:a,value:k}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:ap}]},{type:a,value:G},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:P},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:Q}]},{type:b,tag:c,props:{className:[d,i,j]},children:[{type:a,value:k}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:"\"10.244.2.15\""}]},{type:a,value:R},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:K}]},{type:b,tag:c,props:{className:[d,i,j]},children:[{type:a,value:k}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:S}]},{type:a,value:G},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:o}]},{type:a,value:J},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:P},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:Q}]},{type:b,tag:c,props:{className:[d,i,j]},children:[{type:a,value:k}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:"\"10.244.2.232\""}]},{type:a,value:R},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:K}]},{type:b,tag:c,props:{className:[d,i,j]},children:[{type:a,value:k}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:S}]},{type:a,value:G},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:o}]},{type:a,value:J},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:P},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:Q}]},{type:b,tag:c,props:{className:[d,i,j]},children:[{type:a,value:k}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:"\"10.244.2.95\""}]},{type:a,value:R},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:K}]},{type:b,tag:c,props:{className:[d,i,j]},children:[{type:a,value:k}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:S}]},{type:a,value:G},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:o}]},{type:a,value:O},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:as}]},{type:a,value:w},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:"\"sessionAffinityConfig\""}]},{type:b,tag:c,props:{className:[d,i,j]},children:[{type:a,value:k}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:x}]},{type:a,value:q},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:o}]},{type:a,value:w},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:"\"upstreamHashByConfig\""}]},{type:b,tag:c,props:{className:[d,i,j]},children:[{type:a,value:k}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:x}]},{type:a,value:q},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:o}]},{type:a,value:w},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:"\"noServer\""}]},{type:b,tag:c,props:{className:[d,i,j]},children:[{type:a,value:k}]},{type:a,value:ar},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:"\"trafficShapingPolicy\""}]},{type:b,tag:c,props:{className:[d,i,j]},children:[{type:a,value:k}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:x}]},{type:a,value:q},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:o}]},{type:a,value:aq},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:o}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:as}]},{type:a,value:e}]}]}]},{type:a,value:e},{type:b,tag:f,props:{},children:[{type:a,value:"In the "},{type:b,tag:m,props:{},children:[{type:a,value:"endpoints"}]},{type:a,value:" key in the response we can see all the endpoints the Ingress knows about."}]},{type:a,value:e},{type:b,tag:f,props:{},children:[{type:a,value:"If you increase your application replicas, you will see the new IPs reflected here."}]},{type:a,value:e},{type:b,tag:z,props:{},children:[]},{type:a,value:e},{type:b,tag:A,props:{id:aa},children:[{type:b,tag:p,props:{href:"#wrapping-up",ariaHidden:r,tabIndex:s},children:[{type:b,tag:c,props:{className:[t,u]},children:[]}]},{type:a,value:ab}]},{type:a,value:e},{type:b,tag:f,props:{},children:[{type:a,value:"So far we've discussed pretty much every aspect of how an Ingress Controller works."}]},{type:a,value:e},{type:b,tag:f,props:{},children:[{type:a,value:"Different types of Ingresses will route using different tools (Nginx, HaProxy),\nbut their architecture will look very much the same at the end of the day."}]},{type:a,value:e},{type:b,tag:f,props:{},children:[{type:a,value:"Let's now look at a complete example of an Ingress Controller deployed in a cluster"}]},{type:a,value:e},{type:b,tag:f,props:{},children:[{type:b,tag:v,props:{alt:at,src:"\u002Fcontent\u002Fkubernetes-ingress\u002FIngressComplete.png",title:at},children:[]}]},{type:a,value:e},{type:b,tag:z,props:{},children:[]},{type:a,value:e},{type:b,tag:A,props:{id:ac},children:[{type:b,tag:p,props:{href:"#footnotes",ariaHidden:r,tabIndex:s},children:[{type:b,tag:c,props:{className:[t,u]},children:[]}]},{type:a,value:ad}]},{type:a,value:e},{type:b,tag:au,props:{id:ae},children:[{type:b,tag:p,props:{href:"#loadbalancers",ariaHidden:r,tabIndex:s},children:[{type:b,tag:c,props:{className:[t,u]},children:[]}]},{type:a,value:ag}]},{type:a,value:e},{type:b,tag:f,props:{},children:[{type:a,value:"When using non-cloud infrastructure, probably on-prem, you might use NodePorts directly.\nThis is perfectly fine, and the architecture remains largely the same.\nIn fact, services of "},{type:b,tag:m,props:{},children:[{type:a,value:M}]},{type:a,value:" also use NodePort under the hood, and just hook the LoadBalancer up to that."}]},{type:a,value:e},{type:b,tag:au,props:{id:ah},children:[{type:b,tag:p,props:{href:"#multiple-loadbalancers",ariaHidden:r,tabIndex:s},children:[{type:b,tag:c,props:{className:[t,u]},children:[]}]},{type:a,value:ai}]},{type:a,value:e},{type:b,tag:f,props:{},children:[{type:a,value:"You could expose your application without the need for a Ingress,\nby simply specifying it's Service type, as "},{type:b,tag:m,props:{},children:[{type:a,value:"LoadBalancer"}]},{type:a,value:q},{type:b,tag:T,props:{},children:[]},{type:a,value:"\nThis LoadBalancer will then directly point at your application."},{type:b,tag:T,props:{},children:[]},{type:a,value:"\nOne of the primary problems with this approach is if you deploy a second application,\nyou will need more than one LoadBalancer, which would be a waste of resources and money."},{type:b,tag:T,props:{},children:[]},{type:a,value:"\nIngress Controllers help us to prevent this and allows us to create a\nsingle LoadBalancer as entrypoint for our cluster"}]}]},dir:"\u002Farticles",path:"\u002Farticles\u002Fkubernetes-ingress",extension:".md",createdAt:L,updatedAt:L},author:{slug:V,name:"Chris",bio:"Hi. I'm Chris.\nI build things in the Cloud Native world, and help businesses better understand the landscape they are getting into.\n",avatarUrl:"\u002Fauthors\u002FChris.jpg",links:{twitter:"https:\u002F\u002Ftwitter.com\u002Flone_developer",github:"https:\u002F\u002Fgithub.com\u002Fchris-cmsoft"},dir:"\u002F",path:"\u002Fauthors",extension:".yaml",createdAt:L,updatedAt:L},prev:{slug:"grep",description:"Grep is a utility or function used to search for text patterns in files",title:"Grep"},next:{slug:"kubernetes",description:"Kubernetes is a container orchestrator",title:"Kubernetes"}}],fetch:{},mutations:void 0}}("text","element","span","token","\n","p","punctuation","string","builtin","class-name",":"," ","code","{","}","a",".","true",-1,"icon","icon-link","img",",\n    ","..",2,"hr","h2","div","nuxt-content-highlight","pre","line-numbers","number","\n      ","operator","=",",\n      ","\"port\"","2021-09-24T09:45:36.664Z","type: LoadBalancer","language-bash","\n    ","\n        ","\"address\"",",\n        ","\"5000\"","br","Kubernetes Ingress","chris","the-controller","The Controller","traffic-to-the-ingress","Traffic to the Ingress","the-proxy","The Proxy","wrapping-up","Wrapping up","footnotes","Footnotes","loadbalancers",3,"LoadBalancers","multiple-loadbalancers","Multiple LoadBalancers","Ingress Controller Watching Ingress Objects","language-text","Ingress As A Service Type","Ingress Load Balancer","Ingress Proxy Through Service","Ingress Actual","[","\n  "," false,\n    ","]","Ingress Complete","h3")));